const mongoose = require('mongoose');

// K·∫øt n·ªëi MongoDB
mongoose.connect('mongodb://localhost:27017/billions_gym', {
    useNewUrlParser: true,
    useUnifiedTopology: true
});

const NguoiDungSchema = new mongoose.Schema({
    soCCCD: { type: String, unique: true },
    hoTen: { type: String, required: true },
    ngaySinh: { type: Date },
    diaChi: { type: String },
    gioiTinh: { type: String, required: true },
    anhDaiDien: { type: String },
    email: { type: String, unique: true, sparse: true },
    sdt: { type: String, unique: true, required: true },
}, { discriminatorKey: 'vaiTro', collection: 'nguoiDungs' });

const NguoiDung = mongoose.model('NguoiDung', NguoiDungSchema);

async function fixEmailDuplicates() {
    try {
        console.log('üîç ƒêang ki·ªÉm tra c√°c b·∫£n ghi c√≥ email null ho·∫∑c undefined...');

        // T√¨m t·∫•t c·∫£ b·∫£n ghi c√≥ email null ho·∫∑c undefined
        const recordsWithNullEmail = await NguoiDung.find({
            $or: [
                { email: null },
                { email: undefined },
                { email: '' }
            ]
        });

        console.log(`üìä T√¨m th·∫•y ${recordsWithNullEmail.length} b·∫£n ghi c√≥ email null/undefined`);

        if (recordsWithNullEmail.length > 0) {
            console.log('üîß ƒêang x√≥a email kh·ªèi c√°c b·∫£n ghi...');

            // X√≥a email kh·ªèi c√°c b·∫£n ghi c√≥ email null/undefined
            const result = await NguoiDung.updateMany(
                {
                    $or: [
                        { email: null },
                        { email: undefined },
                        { email: '' }
                    ]
                },
                {
                    $unset: { email: 1 }
                }
            );

            console.log(`‚úÖ ƒê√£ c·∫≠p nh·∫≠t ${result.modifiedCount} b·∫£n ghi`);
        }

        console.log('üéâ Ho√†n th√†nh vi·ªác s·ª≠a l·ªói email duplicate!');

    } catch (error) {
        console.error('‚ùå L·ªói:', error);
    } finally {
        mongoose.connection.close();
    }
}

fixEmailDuplicates();
