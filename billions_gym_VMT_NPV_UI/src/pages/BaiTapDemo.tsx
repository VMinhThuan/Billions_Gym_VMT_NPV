import React, { useState } from 'react';
import BaiTapManager from '../components/BaiTapManager';
import BaiTapForm from '../components/BaiTapForm';
import ExerciseShowcase from './ExerciseShowcase';
import './BaiTapDemo.css';

const BaiTapDemo: React.FC = () => {
    const [currentView, setCurrentView] = useState<'manager' | 'form' | 'instructions' | 'showcase'>('instructions');
    const [isLoading, setIsLoading] = useState(false);

    const handleFormSubmit = async (formData: any) => {
        setIsLoading(true);
        
        // Simulate API call
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        console.log('Form submitted with data:', formData);
        alert('B√†i t·∫≠p ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng! (Demo mode)');
        
        setIsLoading(false);
        setCurrentView('manager');
    };

    const handleFormCancel = () => {
        setCurrentView('manager');
    };

    const renderInstructions = () => (
        <div className="demo-instructions">
            <div className="instructions-header">
                <h1 className="instructions-title">
                    <span className="title-icon">üèãÔ∏è‚Äç‚ôÇÔ∏è</span>
                    Form B√†i T·∫≠p M·ªõi - Ho√†n Thi·ªán
                </h1>
                <p className="instructions-subtitle">
                    Form nh·∫≠p th√¥ng tin b√†i t·∫≠p ƒë√£ ƒë∆∞·ª£c thi·∫øt k·∫ø l·∫°i v·ªõi ƒë·∫ßy ƒë·ªß c√°c tr∆∞·ªùng t·ª´ backend model
                </p>
            </div>

            <div className="features-grid">
                <div className="feature-card">
                    <div className="feature-icon">‚úÖ</div>
                    <h3>ƒê·∫ßy ƒê·ªß C√°c Tr∆∞·ªùng</h3>
                    <p>Bao g·ªìm t·∫•t c·∫£ 10 tr∆∞·ªùng t·ª´ BaiTap model: tenBaiTap, moTa, hinhAnh, nhomCo, mucDoKho, thietBiSuDung, soHiepvaSoLanLap, mucTieuBaiTap, hinhAnhMinhHoa, videoHuongDan</p>
                </div>

                <div className="feature-card">
                    <div className="feature-icon">üé®</div>
                    <h3>Giao Di·ªán ƒê·∫πp M·∫Øt</h3>
                    <p>Thi·∫øt k·∫ø hi·ªán ƒë·∫°i v·ªõi gradient, animations, v√† responsive design. H·ªó tr·ª£ dark mode v√† accessibility</p>
                </div>

                <div className="feature-card">
                    <div className="feature-icon">üîß</div>
                    <h3>T√≠nh NƒÉng N√¢ng Cao</h3>
                    <p>Preview h√¨nh ·∫£nh, validation form, loading states, error handling, v√† nhi·ªÅu t√πy ch·ªçn dropdown v·ªõi emoji</p>
                </div>

                <div className="feature-card">
                    <div className="feature-icon">üì±</div>
                    <h3>Responsive Design</h3>
                    <p>T·ªëi ∆∞u cho m·ªçi thi·∫øt b·ªã t·ª´ desktop ƒë·∫øn mobile. H·ªó tr·ª£ touch gestures v√† keyboard navigation</p>
                </div>

                <div className="feature-card">
                    <div className="feature-icon">üöÄ</div>
                    <h3>T√≠ch H·ª£p D·ªÖ D√†ng</h3>
                    <p>Component ƒë·ªôc l·∫≠p, c√≥ th·ªÉ thay th·∫ø form c≈© trong DynamicForm ho·∫∑c s·ª≠ d·ª•ng ri√™ng bi·ªát</p>
                </div>

                <div className="feature-card">
                    <div className="feature-icon">üîí</div>
                    <h3>Validation M·∫°nh M·∫Ω</h3>
                    <p>Ki·ªÉm tra d·ªØ li·ªáu ƒë·∫ßu v√†o, validation URL, required fields, v√† hi·ªÉn th·ªã l·ªói tr·ª±c quan</p>
                </div>
            </div>

            <div className="integration-guide">
                <h2>H∆∞·ªõng D·∫´n T√≠ch H·ª£p</h2>
                
                <div className="integration-steps">
                    <div className="step">
                        <div className="step-number">1</div>
                        <div className="step-content">
                            <h3>Thay Th·∫ø Form C≈©</h3>
                            <p>Trong file <code>admin.tsx</code>, thay th·∫ø component c≈© b·∫±ng:</p>
                            <pre className="code-block">
{`import BaiTapManager from '../components/BaiTapManager';

// Trong ph·∫ßn render exercises section:
{section === 'exercises' && <BaiTapManager />}`}
                            </pre>
                        </div>
                    </div>

                    <div className="step">
                        <div className="step-number">2</div>
                        <div className="step-content">
                            <h3>Ho·∫∑c S·ª≠ D·ª•ng Form Ri√™ng</h3>
                            <p>S·ª≠ d·ª•ng BaiTapForm component ƒë·ªôc l·∫≠p:</p>
                            <pre className="code-block">
{`import BaiTapForm from '../components/BaiTapForm';

<BaiTapForm
    initialData={editingData}
    onSubmit={handleSubmit}
    onCancel={handleCancel}
    isLoading={loading}
/>`}
                            </pre>
                        </div>
                    </div>

                    <div className="step">
                        <div className="step-number">3</div>
                        <div className="step-content">
                            <h3>C·∫≠p Nh·∫≠t API Endpoints</h3>
                            <p>ƒê·∫£m b·∫£o backend h·ªó tr·ª£ upload file v√† c√°c tr∆∞·ªùng m·ªõi:</p>
                            <pre className="code-block">
{`// Backend c·∫ßn h·ªó tr·ª£:
POST /api/baitap (multipart/form-data)
PUT /api/baitap/:id (multipart/form-data)
GET /api/baitap
DELETE /api/baitap/:id`}
                            </pre>
                        </div>
                    </div>
                </div>
            </div>

            <div className="demo-actions">
                <button 
                    className="demo-btn primary"
                    onClick={() => setCurrentView('form')}
                >
                    <span className="btn-icon">üìù</span>
                    Xem Demo Form
                </button>
                <button 
                    className="demo-btn secondary"
                    onClick={() => setCurrentView('manager')}
                >
                    <span className="btn-icon">üìã</span>
                    Xem Demo Manager
                </button>
                <button 
                    className="demo-btn primary"
                    onClick={() => setCurrentView('showcase')}
                >
                    <span className="btn-icon">‚ú®</span>
                    Giao Di·ªán M·ªõi
                </button>
            </div>
        </div>
    );

    return (
        <div className="baitap-demo">
            {currentView === 'instructions' && renderInstructions()}
            
            {currentView === 'form' && (
                <div className="demo-container">
                    <div className="demo-header">
                        <button 
                            className="back-btn"
                            onClick={() => setCurrentView('instructions')}
                        >
                            ‚Üê Quay l·∫°i h∆∞·ªõng d·∫´n
                        </button>
                        <h2>Demo: Form T·∫°o B√†i T·∫≠p M·ªõi</h2>
                    </div>
                    <BaiTapForm
                        onSubmit={handleFormSubmit}
                        onCancel={handleFormCancel}
                        isLoading={isLoading}
                    />
                </div>
            )}
            
            {currentView === 'manager' && (
                <div className="demo-container">
                    <div className="demo-header">
                        <button 
                            className="back-btn"
                            onClick={() => setCurrentView('instructions')}
                        >
                            ‚Üê Quay l·∫°i h∆∞·ªõng d·∫´n
                        </button>
                        <h2>Demo: Qu·∫£n L√Ω B√†i T·∫≠p</h2>
                    </div>
                    <BaiTapManager />
                </div>
            )}
            
            {currentView === 'showcase' && <ExerciseShowcase />}
        </div>
    );
};

export default BaiTapDemo;
